server:
  port: ${APP_SERVER_PORT:8080}

spring:
  application:
    name: policy

  kafka:                ## Apache Kafka Configuration
    bootstrap-servers: ${APP_KAFKA_BROKERS:localhost:9092}
    properties:
      #      sasl.mechanism: SCRAM-SHA-512
      request.timeout.ms: 20000
      #      retry.backoff.ms: 500
      #      sasl.jaas.config: "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"${APP_KAFKA_USERNAME}\" password=\"${APP_KAFKA_PASSWORD}\";"
      security.protocol: ${APP_KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
      schema.registry.url: ${APP_KAFKA_SCHEMA_REGISTRY_URL:http://localhost:8081}

    consumer:
      bootstrap-servers: localhost:9092  # more than one broke localhost:9092,localhost:9093
      group-id: group_policy_id # consumer group id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer  # JSON message Lib from Spring
      #value-deserializer: org.apache.kafka.common.serialization.StringDeserializer      # String message Lib from Kafka
      #properties.spring.json.trusted.packages: *
      properties:
        value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicNameStrategy
        # AVRO
        specific.avro.reader: true
        spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
      topics:
        process-policy-request-v1:
          name: command.policy.process-policy-request.v1
          concurrency: 1

    producer:
      process-policy-request-v1: command.policy.process-policy-request.v1
      store-policy-v1: data.policy.policy.v1
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer # JSON message Lib from Spring
      #value-serializer: org.apache.kafka.common.serialization.StringSerializer     # String message Lib from Kafka
      properties:
        enable.idempotence: true
        max.block.ms: 5000
        max.in.flight.requests.per.connection: 5
        linger.ms: 10
        value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicNameStrategy
  jackson:
    property-naming-strategy: SNAKE_CASE

  data:
    mongodb:         ## Javers need the setup on the main application file
      uri: mongodb://${APP_MONGODB_USER:user}:${APP_MONGODB_PASSWORD:password}@${APP_MONGODB_CLUSTER:localhost}:${APP_MONGODB_PORT:27017}/${APP_MONGODB_DB:policy}${APP_MONGODB_REPLICA_SET_CONFIG:}?retryWrites=false